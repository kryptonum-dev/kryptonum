---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/components/ui/portable-text'
import Image, { ImageDataQuery, type ImageDataProps } from '@/components/ui/image'
import CountUp from '@/components/ui/CountUp.astro'

export const StatsHighlight_Query = `
  _type == "StatsHighlight" => {
    ${PortableTextQuery('heading')}
    items[] {
      ${ImageDataQuery('img')}
      value,
      label,
    },
  },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  items: {
    img: ImageDataProps
    value: string
    label: string
  }[]
}

const { index, sectionId, heading, items } = Astro.props
---

<section class="StatsHighlight" id={sectionId}>
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading h2" />
  </header>
  <ul class="items">
    {
      items.map(({ img, value, label }) => (
        <li class="item">
          <Image {...img} sizes="94px" loading={index === 0 ? 'eager' : 'lazy'} />
          <CountUp class="value">{value}</CountUp>
          <p class="label">{label}</p>
        </li>
      ))
    }
  </ul>
</section>

<style lang="scss">
  @mixin flex-grid($columns, $column-gap) {
    display: flex;
    flex-wrap: wrap;
    column-gap: $column-gap;
    .item {
      width: calc((100% - ($column-gap * ($columns - 1))) / $columns);
    }
  }
  .StatsHighlight {
    padding: clamp(3rem, calc(5vw / 0.48), 6rem) 0;
    max-width: 54rem;
    margin: 0 auto;
    header {
      text-align: center;
      max-width: 18rem;
      margin: 0 auto clamp(2rem, calc(3vw / 0.48), 4rem);
    }
    .items {
      row-gap: 2.75rem;
      @include flex-grid(3, 1rem);
      @media (max-width: 38rem) {
        @include flex-grid(1, 1rem);
      }
      .item {
        text-align: center;
        img {
          width: auto;
          height: 28px;
          object-fit: contain;
        }
        .value {
          font-size: var(--typography-heading-2xl, 2.25rem);
          margin: clamp(1rem, calc(2vw / 0.48), 2rem) 0 clamp(0.25rem, calc(0.32vw / 0.48), 0.32rem);
        }
        .label {
          font-size: var(--typography-body-m, 0.875rem);
          color: var(--neutral-400, #c6cdcc);
        }
      }
    }
  }
</style>
