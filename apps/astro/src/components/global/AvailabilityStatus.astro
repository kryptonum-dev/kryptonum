---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/components/ui/portable-text'
import Image, { ImageDataQuery, type ImageDataProps } from '@/components/ui/image'

export const AvailabilityStatus_Query = `
  _type == "AvailabilityStatus" => {
    ${ImageDataQuery('logo')}
    status,
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('paragraph')}
  },
`

type Props = {
  index: number
  sectionId?: string
  logo: ImageDataProps
  status: string
  heading: PortableTextValue
  paragraph: PortableTextValue
}

const { index, sectionId, logo, status, heading, paragraph } = Astro.props
---

<section class="AvailabilityStatus" id={sectionId}>
  <div class="wrapper">
    <Image {...logo} sizes="345px" />
    <p class="status">{status}</p>
  </div>
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading h2" />
    <PortableText value={paragraph} class="paragraph" />
  </header>
</section>

<style lang="scss">
  .AvailabilityStatus {
    margin: clamp(2rem, calc(3vw / 0.48), 4rem) calc(var(--page-margin) * -1);
    padding: 2rem var(--page-margin) 0;
    position: relative;
    overflow: hidden;
    text-align: center;
    &::before {
      content: '';
      width: 100%;
      height: 1px;
      background: linear-gradient(266deg, #05432d66, #05503566, #1f6644, #11353133);
      position: absolute;
      left: 0;
      top: 0;
      right: 0;
    }
    &::after {
      content: '';
      position: absolute;
      left: 50%;
      top: 0;
      transform: translate3d(-50%, -50%, 0);
      width: 100%;
      max-width: 32rem;
      aspect-ratio: 1 / 1;
      border-radius: 50%;
      background: linear-gradient(266deg, #0b0f0d, #011310, #001f1b);
      filter: blur(100px);
      z-index: -1;
    }
    .wrapper {
      display: inline-flex;
      flex-wrap: wrap;
      align-items: center;
      gap: clamp(1rem, calc(2vw / 0.48), 2rem);
      img {
        width: clamp(131px, calc(149vw / 7.68), 149px);
      }
      overflow: hidden;
      .status {
        display: grid;
        grid-template-columns: auto 1fr;
        align-items: center;
        gap: 0.75rem;
        font-size: var(--typography-body-m, 0.875rem);
        &::before,
        &::after {
          content: '';
          width: 6px;
          height: 6px;
          border-radius: 50%;
          background: var(--gradient-primary);
        }
        &::after {
          position: absolute;
          animation: pulse 3s infinite;
        }
        @keyframes pulse {
          0%,
          5% {
            transform: scale(0);
            opacity: 1;
          }
          30% {
            transform: scale(2);
            opacity: 0.38;
          }
          50%,
          100% {
            opacity: 0;
            transform: scale(3);
          }
        }
      }
    }
    header {
      max-width: 39rem;
      margin: clamp(2.5rem, calc(3vw / 0.48), 3rem) auto 0;
      .heading {
        margin-bottom: 1rem;
      }
      .paragraph {
        font-size: var(--typography-body-m, 0.875rem);
      }
    }
    @media (max-width: 44rem) {
      text-align: left;
    }
  }
</style>
