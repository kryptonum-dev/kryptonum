---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/components/ui/portable-text'
import Image, { ImageDataQuery, type ImageDataProps } from '@/components/ui/image'

export const HeaderGridIcons_Query = (isPageBuilder: boolean = true) => `
  ${isPageBuilder ? '_type == "HeaderGridIcons" =>' : 'HeaderGridIcons'} {
    ${PortableTextQuery('heading')}
    list[] {
      ${ImageDataQuery('icon')}
      ${PortableTextQuery('text')}
    },
  },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  list: Array<{
    icon: ImageDataProps
    text: PortableTextValue
  }>
}
const { index, sectionId, heading, list } = Astro.props
---

<section class="HeaderGridIcons" id={sectionId}>
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading h2" />
  </header>
  <ul>
    {
      list?.map(({ icon, text }) => (
        <li>
          <div class="icon">
            <Image {...icon} sizes="24px" loading={index === 0 ? 'eager' : 'lazy'} />
          </div>
          <PortableText value={text} />
        </li>
      ))
    }
  </ul>
</section>

<style lang="scss">
  .HeaderGridIcons {
    padding: clamp(3rem, calc(5vw / 0.48), 7rem) 0;
    display: grid;
    gap: clamp(3rem, calc(4vw / 0.48), 8rem);
    max-width: 49rem;
    margin: 0 auto;
    @media (min-width: 69rem) {
      max-width: unset;
      grid-template-columns: 1fr 2.6fr;
    }
    ul {
      display: grid;
      align-items: flex-start;
      gap: clamp(1.25rem, calc(2vw / 0.48), 3rem) clamp(1rem, calc(1vw / 0.48), 1.25rem);
      grid-template-columns: 1fr 1fr;
    }
    li {
      display: grid;
      gap: clamp(0.75rem, calc(1vw / 0.48), 1rem);
      font-size: var(--typography-body-m, 0.875rem);
      .icon {
        width: clamp(2.5rem, calc(3vw / 0.48), 3rem);
        height: clamp(2.5rem, calc(3vw / 0.48), 3rem);
        border-radius: 50%;
        border: 1px solid var(--neutral-700, #383842);
        display: grid;
        place-items: center;
        img {
          width: 24px;
          height: 24px;
        }
      }
    }
    @media (max-width: 44rem) {
      ul {
        grid-template-columns: 1fr;
      }
      li {
        grid-template-columns: auto 1fr;
      }
    }
  }
</style>
