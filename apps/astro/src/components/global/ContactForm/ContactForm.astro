---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/components/ui/portable-text'
import Image, { ImageDataQuery, type ImageDataProps } from '@/components/ui/image'
import FormWrapper from './Form/FormWrapper.astro'

export const ContactForm_Query = `
  _type == "ContactForm" => {
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('paragraph')}
    list[] {
      ${ImageDataQuery('icon')}
      ${PortableTextQuery('label')}
    },
    state {
      success {
        ${PortableTextQuery('heading')}
        ${PortableTextQuery('paragraph')}
        link {
          url,
          ${ImageDataQuery('icon')}
          heading,
          paragraph,
          ${ImageDataQuery('img')}
        },
      },
      error {
        ${PortableTextQuery('heading')}
        ${PortableTextQuery('paragraph')}
      },
    },
  },
`

export type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  paragraph: PortableTextValue
  list: Array<{
    icon: ImageDataProps
    label: PortableTextValue
  }>
  state: {
    success: {
      heading: PortableTextValue
      paragraph: PortableTextValue
      link: {
        url: string
        icon: ImageDataProps
        heading: string
        paragraph: string
        img: ImageDataProps
      }
    }
    error: {
      heading: PortableTextValue
      paragraph: PortableTextValue
    }
  }
}

const { index, sectionId, heading, paragraph, list, state } = Astro.props
---

<section class="ContactForm" id={sectionId}>
  <div class="wrapper">
    <header>
      <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading" />
      <PortableText value={paragraph} class="paragraph" />
    </header>
    <ul class="list">
      {
        list.map(({ icon, label }) => (
          <li class="item">
            <Image {...icon} sizes="20px" loading={index === 0 ? 'eager' : 'lazy'} />
            <PortableText value={label} />
          </li>
        ))
      }
    </ul>
    <FormWrapper state={state} />
  </div>
</section>

<style lang="scss">
  .ContactForm {
    padding: clamp(2rem, calc(3vw / 0.48), 4rem) 0;
    .wrapper {
      padding: clamp(2rem, calc(3vw / 0.48), 3rem) clamp(2rem, calc(3vw / 0.48), 6rem);
      border-top: 1px solid var(--primary-500, #064040);
      border-bottom: 1px solid var(--primary-500, #064040);
      display: grid;
      grid-template-columns: 1.25fr 1fr;
      grid-template-rows: auto 1fr;
      column-gap: clamp(2rem, calc(3vw / 0.48), 8rem);
      grid-template-areas: 'header form' 'list form';
      header {
        grid-area: header;
        .heading {
          margin-bottom: 1rem;
        }
      }
      .list {
        grid-area: list;
        margin-top: 2.5rem;
        .item {
          display: grid;
          grid-template-columns: auto 1fr;
          gap: 0.5rem;
          img {
            width: 20px;
            height: 20px;
            margin-top: 0.25rem;
          }
          &:not(:last-child) {
            margin-bottom: 1rem;
          }
        }
      }
      :global(.Form) {
        grid-area: form;
      }
    }
    @media (max-width: 65rem) {
      max-width: 38rem;
      margin: 0 auto;
      .wrapper {
        grid-template-columns: 1fr;
        grid-template-areas: 'header' 'form' 'list';
        gap: clamp(2rem, calc(4vw / 0.48), 4rem);
        padding-left: 0;
        padding-right: 0;
        .list {
          margin-top: 0;
          padding-top: 2rem;

          border-top: 1px solid var(--primary-500, #064040);
        }
      }
    }
  }
</style>
