---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/components/ui/portable-text'
import Button, { ButtonDataQuery, type ButtonDataProps } from '@/components/ui/Button'
import Image, { ImageDataQuery, type ImageDataProps } from '@/components/ui/image'
import Video, { VideoDataQuery, type VideoDataProps } from '@/components/ui/Video.astro'

export const CenteredMediaTextSection_Query = `
  _type == "CenteredMediaTextSection" => {
    ${PortableTextQuery('heading')}
    media {
      type,
      ${ImageDataQuery('image')}
      ${VideoDataQuery('video')}
    },
    ${PortableTextQuery('paragraph')}
    ${PortableTextQuery('ctaText')}
    ${ButtonDataQuery('ctas[]')}
  },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  media: {
    type: 'image' | 'video'
    image: ImageDataProps
    video: VideoDataProps
  }
  paragraph: PortableTextValue
  ctaText: PortableTextValue
  ctas: ButtonDataProps[]
}

const { index, sectionId, heading, media, paragraph, ctaText, ctas } = Astro.props
---

<section class="CenteredMediaTextSection" id={sectionId}>
  <div class="wrapper">
    {
      media.type === 'image' ? (
        <Image {...media.image} sizes="(max-width: 74rem) 100vw, 608px" class="media" priority={index === 0} />
      ) : (
        <Video {...media.video} hideControls={true} class="media" />
      )
    }
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="h1 heading" />
    <div class="content">
      <PortableText value={paragraph} />
      <PortableText value={ctaText} class="cta-text" />
      <div class="cta-wrapper">
        {ctas.map((cta) => <Button {...cta} />)}
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  .CenteredMediaTextSection {
    padding: clamp(3rem, calc(5vw / 0.48), 6rem) 0;
    .wrapper {
      display: grid;
      grid-template-columns: auto auto;
      justify-content: space-between;
      gap: 1rem;
      min-height: 608px;
      position: relative;
    }
    .heading {
      max-width: 32rem;
    }
    .media {
      height: 608px;
      width: auto;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: -1;
    }
    .content {
      align-self: flex-end;
      max-width: 26rem;
      .cta-text {
        margin: clamp(2rem, calc(3vw / 0.48), 3.5rem) 0 1.25rem;
        font-size: var(--typography-body-m, 0.875rem);
      }
    }
    @media (max-width: 74rem) {
      .wrapper {
        max-width: 38rem;
        margin: 0 auto;
        grid-template-columns: 1fr;
      }
      .media {
        position: static;
        transform: none;
        width: 100%;
        height: auto;
        margin: -10% 0;
      }
      .heading {
        max-width: 100%;
      }
      .content {
        max-width: 100%;
      }
    }
  }
</style>
