---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@/components/ui/portable-text'
import Button, { ButtonDataQuery, type ButtonDataProps } from '@/src/components/ui/Button'
import BlogCard, { BlogCard_Query, type Props as BlogCardProps } from '@/components/ui/BlogCard.astro'

export const LatestBlogPosts_Query = `
  _type == "LatestBlogPosts" => {
    ${PortableTextQuery('heading')}
    ${ButtonDataQuery('cta')}
    "posts": select(posts != null =>
      posts[] -> {
        ${BlogCard_Query}
      },
      *[_type == "BlogPost_Collection"][] | order(coalesce(publishedDate, _createdAt) desc)[0...2] {
        ${BlogCard_Query}
      },
    ),
  },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  cta?: ButtonDataProps
  posts: Array<BlogCardProps>
}

const { index, sectionId, heading, cta, posts } = Astro.props
---

<section class="LatestBlogPosts" id={sectionId}>
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading h2" />
    {cta && <Button {...cta} />}
  </header>
  <section class="posts">
    {
      posts.map(({ img, name, slug, content }, i) => (
        <BlogCard
          {...{
            img,
            name,
            slug,
            content,
            imgProps: {
              sizes: '(max-width: 46rem) 100vw, 40vw',
              priority: index === 0 && i === 0,
              loading: index === 0 ? 'eager' : 'lazy',
            },
          }}
        />
      ))
    }
  </section>
</section>

<style lang="scss">
  .LatestBlogPosts {
    padding: clamp(2rem, calc(4vw / 0.48), 5rem) 0;
    display: grid;
    grid-template-columns: 1fr 2fr;
    align-items: center;
    gap: clamp(1.25rem, calc(3vw / 0.48), 3rem) 1.25rem;
    > header {
      display: grid;
      gap: clamp(1rem, calc(3vw / 0.48), 3rem);
      justify-items: flex-start;
    }
    .posts {
      display: grid;
      grid-template-columns: 1fr 1fr;
      align-items: stretch;
      gap: clamp(0.75rem, calc(1vw / 0.48), 1.25rem);
    }
    @media (max-width: 66rem) {
      max-width: 38rem;
      margin: 0 auto;
      grid-template-columns: 1fr;
      > header {
        align-items: flex-start;
        grid-template-columns: 1fr auto;
      }
    }
    @media (max-width: 46rem) {
      > header {
        gap: 0.75rem;
        grid-template-columns: 1fr;
      }
      .posts {
        grid-template-columns: 1fr;
      }
    }
  }
</style>
