---
import { ITEMS_PER_PAGE } from '@templates/portfolio/index.astro'
import PortableText, { PortableTextQuery, type PortableTextValue } from '@repo/ui/portable-text'
import CategoryTab from '@repo/ui/CategoryTab'
import Pagination from '@repo/ui/Pagination'
import Image, { ImageDataQuery, type ImageDataProps } from '@repo/ui/Image'
import { PAGE_LABEL } from '@repo/ui/Pagination'
import { type Language } from '@repo/shared/languages'

type Props = {
  hero: {
    heading: PortableTextValue
    paragraph: PortableTextValue
  }
  totalCaseStudies: number
  categories: Array<{
    name: string
    slug: string
    count: number
  }>
  totalCaseStudiesByCategory: number
  listing: Array<{
    slug: string
    img: ImageDataProps
    name: string
    description: string
    categories: Array<string>
    date: Date
  }>
  currentPage: number
  currentCategory: string | null
}
export type ListingProps = Props

const lang = Astro.params.lang as Language
const translations = {
  pl: {
    categories: 'Kategorie',
    all: 'Wszystkie',
  },
  en: {
    categories: 'Categories',
    all: 'All',
  },
} as const

export const Listing_Query = `
  "listing": {
    "hero": select(defined($category) => *[_type == 'CaseStudyCategory_Collection' && slug.current match "*" + $category][0].hero, hero) {
      ${PortableTextQuery('heading')}
      ${PortableTextQuery('paragraph')}
    },
    "totalCaseStudies": count(*[_type == 'CaseStudy_Collection' && language == $language]),
    "categories": *[_type == 'CaseStudyCategory_Collection'
      && language == $language
      && count(*[_type == 'CaseStudy_Collection' && ^._id in categories[]._ref]) > 0
    ] {
      name,
      "slug": slug.current,
      "count": count(*[_type == 'CaseStudy_Collection' && ^._id in categories[]._ref])
    },
    "totalCaseStudiesByCategory": count(*[_type == 'CaseStudy_Collection' && language == $language && select(defined($category) => categories[] -> slug.current match "*" + $category, true)]),
    "listing": *[_type == 'CaseStudy_Collection'
      && language == $language
      && select(
        defined($category) => count(categories[]->{
          "matches": slug.current match ($category + "$")
        }) > 0,
        true
      )
    ] | order(_createdAt desc) [$PAGINATION_BEFORE...$PAGINATION_AFTER] {
      "slug": slug.current,
      ${ImageDataQuery('img')}
      name,
      description,
      "categories": categories[] -> name,
      date
    },
  },
`

const { hero, totalCaseStudies, categories, totalCaseStudiesByCategory, listing, currentPage, currentCategory } =
  Astro.props

const slugBase = (() => {
  const categoryPath = currentCategory ? `/${lang === 'pl' ? 'kategoria' : 'category'}/${currentCategory}` : ''
  return `${lang === 'pl' ? '/pl' : '/en'}/portfolio${categoryPath}`
})()
---

<section class="Listing" id="strona">
  <header>
    <PortableText value={hero.heading} heading="h1" class="h1 heading" />
    <PortableText value={hero.paragraph} />
  </header>
  <div class="listing-categories">
    <p>{translations[lang].categories}</p>
    <ul>
      <li>
        <CategoryTab slug={`/${lang}/portfolio#${PAGE_LABEL[lang]}`} isActive={!currentCategory}>
          {translations[lang].all} ({totalCaseStudies})
        </CategoryTab>
      </li>
      {
        categories.map((category) => {
          const isActive = currentCategory ? category.slug.endsWith(currentCategory) : false
          return (
            <li>
              <CategoryTab slug={`${category.slug}#${PAGE_LABEL[lang]}`} isActive={isActive}>
                {category.name} ({category.count})
              </CategoryTab>
            </li>
          )
        })
      }
    </ul>
  </div>
  <div class="items">
    {
      listing?.map(({ slug, img, name, description, categories, date }, listingIndex) => (
        <article>
          <a href={slug}>
            <div class="img">
              <Image
                {...img}
                sizes="(max-width: 47rem) 100vw, (max-width: 63rem) 50vw, 34vw"
                priority={listingIndex === 0}
              />
              <p class="year">{new Date(date).getFullYear()}</p>
            </div>
            <div class="wrapper">
              <p class="name">{name}</p>
              <p class="description">{description}</p>
              <ul class="categories">
                {categories.map((category) => (
                  <li>{category}</li>
                ))}
              </ul>
            </div>
          </a>
        </article>
      ))
    }
  </div>
  <Pagination
    slugBase={slugBase}
    totalItems={totalCaseStudiesByCategory}
    itemsPerPage={ITEMS_PER_PAGE}
    currentPage={currentPage}
  />
</section>

<style lang="scss">
  .Listing {
    padding: clamp(3rem, calc(4vw / 0.48), 5rem) 0;
    header {
      max-width: 38rem;
      margin: 0 auto;
      text-align: center;
      @media (max-width: 48rem) {
        text-align: left;
      }
      .heading {
        margin-bottom: clamp(1.5rem, calc(2vw / 0.48), 2rem);
      }
    }
    .listing-categories {
      padding-bottom: clamp(1rem, calc(1.5vw / 0.48), 1.5rem);
      margin: clamp(1.5rem, calc(2vw / 0.48), 4rem) 0;
      border-bottom: 1px solid var(--neutral-600, #4a4a57);
      display: flex;
      flex-wrap: wrap;
      gap: 0.75rem 2.5rem;
      align-items: center;
      p {
        font-size: var(--typography-body-m, 0.875rem);
      }
      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
      }
    }
    .items {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: clamp(1.5rem, calc(3vw / 0.48), 3rem) 0.75rem;
      article {
        a {
          height: 100%;
          display: block;
          border-radius: 0.25rem;
          transition: border-color 800ms var(--easing);
          border: 1px solid rgba(0, 0, 0, 0);
          &:hover {
            border-color: var(--primary-500, #064040);
          }
        }
        .img {
          margin: -1px;
          position: relative;
          img {
            border-radius: 0.25rem;
            border: 1px solid var(--primary-500, #064040);
          }
          .year {
            position: absolute;
            bottom: 0.75rem;
            left: 0.75rem;
            border-radius: 1.5rem;
            font-size: var(--typography-body-s, 0.75rem);
            background-color: rgba(0, 1, 3, 0.8);
            padding: 0.12rem 0.38rem;
            backdrop-filter: blur(4px);
          }
        }
        .wrapper {
          padding: clamp(1rem, calc(1vw / 0.48), 1.75rem) 1.25rem;
          .name {
            font-size: var(--typography-heading-l, 1.375rem);
          }
          .description {
            color: var(--neutral-400, #c6cdcc);
            font-size: var(--typography-body-m, 0.875rem);
            margin: 0.75rem 0 clamp(1.5rem, calc(1.5vw / 0.48), 2rem);
          }
          .categories {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem clamp(0.5rem, calc(1vw / 0.48), 1.5rem);
            font-size: var(--typography-body-m, 0.875rem);
            color: var(--neutral-400, #c6cdcc);
          }
        }
      }
      @media (max-width: 56rem) {
        article {
          .wrapper {
            padding: 1rem;
          }
        }
      }
      @media (max-width: 49rem) {
        grid-template-columns: 1fr;
      }
    }
  }
</style>
