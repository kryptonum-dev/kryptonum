---
import type { ComponentProps } from 'astro/types'
import SimpleCtaSection, { SimpleCtaSection_Query } from '@/components/global/SimpleCtaSection.astro'
import Faq, { Faq_Query } from '@/components/global/Faq.astro'
import TagsSection, { TagsSection_Query } from '@/components/global/TagsSection.astro'
import MarqueePillSection, { MarqueePillSection_Query } from '@/components/global/MarqueePillSection.astro'
import HeaderGridIcons, { HeaderGridIcons_Query } from '@/components/global/HeaderGridIcons.astro'
import SimpleHeaderWithImage, { SimpleHeaderWithImage_Query } from '@/components/global/SimpleHeaderWithImage.astro'
import SplitScreenCtaSection, { SplitScreenCtaSection_Query } from '@/components/global/SplitScreenCtaSection.astro'
import OverlappingCircles, { OverlappingCircles_Query } from '@/components/global/OverlappingCircles.astro'
import PillCtaSection, { PillCtaSection_Query } from '@/components/global/PillCtaSection.astro'
import StackImagesWithCtaAndAvatars, {
  StackImagesWithCtaAndAvatars_Query,
} from '@/components/global/StackImagesWithCtaAndAvatars.astro'
import ImageAndNumberedList, { ImageAndNumberedList_Query } from '@/components/global/ImageAndNumberedList.astro'
import SkillsAndLinks, { SkillsAndLinks_Query } from '@/components/global/SkillsAndLinks.astro'
import ContactInfo, { ContactInfo_Query } from '@/components/global/ContactInfo.astro'
import SimpleTextSection, { SimpleTextSection_Query } from '@/components/global/SimpleTextSection.astro'

const components = {
  SimpleCtaSection,
  Faq,
  TagsSection,
  MarqueePillSection,
  HeaderGridIcons,
  SimpleHeaderWithImage,
  SplitScreenCtaSection,
  OverlappingCircles,
  PillCtaSection,
  StackImagesWithCtaAndAvatars,
  ImageAndNumberedList,
  SkillsAndLinks,
  ContactInfo,
  SimpleTextSection,
}

type ComponentsMap = {
  [Component in keyof typeof components]: {
    _type: Component
  } & ComponentProps<(typeof components)[Component]>
}

export type ComponentsProps = Array<ComponentsMap[keyof typeof components]>

type Props = {
  data: ComponentsProps
  indexStart?: number
}

const { data, indexStart = 0 } = Astro.props

export const Components_Query = /* groq */ `
  components[] {
    _type,
    sectionId,
    ${SimpleCtaSection_Query}
    ${Faq_Query}
    ${TagsSection_Query}
    ${MarqueePillSection_Query}
    ${HeaderGridIcons_Query}
    ${SimpleHeaderWithImage_Query}
    ${SplitScreenCtaSection_Query}
    ${OverlappingCircles_Query}
    ${PillCtaSection_Query}
    ${StackImagesWithCtaAndAvatars_Query}
    ${ImageAndNumberedList_Query}
    ${SkillsAndLinks_Query}
    ${ContactInfo_Query}
    ${SimpleTextSection_Query}
  },
`
---

{
  data?.map((item, i) => {
    // NOTE: Using 'as any' is not ideal for type safety, but it's used here to simplify
    // the implementation and avoid creating separate typed interfaces for each component.
    const DynamicComponent = components[item._type] as any
    if (!DynamicComponent) return null
    return <DynamicComponent {...item} index={indexStart + i} />
  })
}
