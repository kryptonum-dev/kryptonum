---
import Layout from '@repo/shared/Layout'
import metadataFetch from '@repo/utils/metadata.fetch'
import sanityFetch from '@repo/utils/sanity.fetch'
import Breadcrumbs from '@components/shared/Breadcrumbs.astro'
import Components, { Components_Query, type ComponentsProps } from '@components/Components.astro'
import { type Language } from '@repo/shared/languages'

type Props = NonNullable<Awaited<ReturnType<typeof fetchData>>>

export async function fetchData(lang: Language) {
  const page = await sanityFetch<{
    name: string
    slug: string
    components: ComponentsProps
  }>({
    query: `
      *[_type == "NotFound_Page" && language == $language][0] {
        name,
        "slug": slug.current,
        ${Components_Query}
      }
    `,
    params: { language: lang },
  })
  if (!page) return null
  const metadata = await metadataFetch(page.slug)
  return { page, metadata }
}

const { page, metadata } = Astro.props
---

<Layout {...metadata}>
  <Breadcrumbs data={[{ name: page.name, path: page.slug }]} />
  <Components data={page.components} />
</Layout>
