---
export const slugPrefix = '/pl/zespol/'

import Layout from '@repo/shared/Layout'
import sanityFetch from '@repo/utils/sanity.fetch'
import metadataFetch from '@repo/utils/metadata.fetch'
import Breadcrumbs from '@components/shared/Breadcrumbs.astro'
import Components, { Components_Query, type ComponentsProps } from '@components/Components.astro'
import Image, { ImageDataQuery, type ImageDataProps } from '@repo/ui/Image'
import ScrollToNextPage from '@components/shared/ScrollToNextPage.astro'

export async function getStaticPaths() {
  const pages = await sanityFetch<{ slug: string }[]>({
    query: `
      *[_type == 'TeamMember_Collection'][] {
        "slug": slug.current,
      }
    `,
  })
  return pages?.map(({ slug }) => ({ params: { slug: slug.replace(slugPrefix, '') } }))
}

const { slug: _slug } = Astro.params
const slug = `${slugPrefix}${_slug}`

const page = await sanityFetch<{
  name: string
  components: ComponentsProps
  ScrollToNextPage: {
    name: string
    slug: string
    img: ImageDataProps
    headline: string
  }
}>({
  query: `
    *[_type == 'TeamMember_Collection' && slug.current == $slug && language == $language][0] {
      name,
      ${Components_Query}
      "ScrollToNextPage": coalesce(
        *[_type == 'TeamMember_Collection' && _createdAt > ^._createdAt] | order(_createdAt asc)[0] {
          name,
          "slug": slug.current,
          ${ImageDataQuery('img')}
          headline,
        },
        *[_type == 'TeamMember_Collection'] | order(_createdAt asc)[0] {
          name,
          "slug": slug.current,
          ${ImageDataQuery('img')}
          headline,
        }
      )
    }
  `,
  params: {
    slug: slug,
    language: 'pl',
  },
})
if (!page) return Astro.rewrite('/404')

const metadata = await metadataFetch(slug)
---

<Layout {...metadata}>
  <Breadcrumbs
    data={[
      { name: 'Zespół', path: '/pl/zespol' },
      { name: page.name, path: slug },
    ]}
  />
  <Components data={page.components} />
  <ScrollToNextPage slot="ScrollToNextPage" path={page.ScrollToNextPage.slug} data-element="ScrollToNextPage">
    <h2>❧ Scrolluj, by przejść do <strong>następnej osoby</strong></h2>
    <div class="person">
      <Image {...page.ScrollToNextPage.img} sizes="64px" class="gradient-thumbnail" />
      <div>
        <p class="name">{page.ScrollToNextPage.name}</p>
        <p class="headline">{page.ScrollToNextPage.headline}</p>
      </div>
    </div>
  </ScrollToNextPage>
</Layout>

<style lang="scss">
  [data-element='ScrollToNextPage'] {
    h2 {
      max-width: 17rem;
      margin: 0 auto 1rem;
      text-align: center;
    }
    .person {
      margin: 0 auto;
      width: fit-content;
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 0.75rem;
      align-items: center;
      img {
        width: 64px;
        height: 64px;
      }
      .headline {
        font-size: var(--typography-body-m, 0.875rem);
      }
    }
  }
</style>
