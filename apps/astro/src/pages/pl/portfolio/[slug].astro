---
export const slugPrefix = '/pl/portfolio/'

import Layout from '@repo/shared/Layout'
import sanityFetch from '@repo/utils/sanity.fetch'
import metadataFetch from '@repo/utils/metadata.fetch'
import Breadcrumbs from '@components/shared/Breadcrumbs.astro'
import Components, { Components_Query, type ComponentsProps } from '@components/Components.astro'
import ScrollToNextPage from '@components/shared/ScrollToNextPage.astro'

export async function getStaticPaths() {
  const pages = await sanityFetch<{ slug: string }[]>({
    query: `
      *[_type == 'CaseStudy_Collection' && language == $language][] {
        "slug": slug.current,
      }
    `,
    params: { language: 'pl' },
  })
  return pages?.map(({ slug }) => ({ params: { slug: slug.replace(slugPrefix, '') } }))
}

const { slug: _slug } = Astro.params
const slug = `${slugPrefix}${_slug}`

const page = await sanityFetch<{
  name: string
  components: ComponentsProps
  ScrollToNextPage: {
    name: string
    slug: string
  }
}>({
  query: `
    *[_type == 'CaseStudy_Collection' && slug.current == $slug && language == $language][0] {
      name,
      ${Components_Query}
      "ScrollToNextPage": coalesce(
        *[_type == 'CaseStudy_Collection' && _createdAt < ^._createdAt && language == $language] | order(_createdAt desc)[0] {
          name,
          "slug": slug.current,
        },
        *[_type == 'CaseStudy_Collection' && language == $language] | order(_createdAt desc)[0] {
          name,
          "slug": slug.current,
        }
      )
    }
  `,
  params: {
    slug: slug,
    language: 'pl',
  },
})

if (!page) return Astro.rewrite('/404')

const metadata = await metadataFetch(slug)
---

<Layout {...metadata}>
  <Breadcrumbs
    data={[
      { name: 'Portfolio', path: '/pl/portfolio' },
      { name: page.name, path: slug },
    ]}
  />
  <Components data={page.components} />
  <ScrollToNextPage slot="ScrollToNextPage" path={page.ScrollToNextPage.slug} data-element="ScrollToNextPage">
    <h2>
      ❧ Scrolluj, by przejść do <strong>następnego projektu</strong>
    </h2>
    <p>{page.ScrollToNextPage.name}</p>
  </ScrollToNextPage>
</Layout>

<style lang="scss">
  [data-element='ScrollToNextPage'] {
    text-align: center;
    h2 {
      max-width: 17rem;
      margin: 0 auto 1rem;
    }
  }
</style>
