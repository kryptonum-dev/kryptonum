---
export const slugPrefix = '/pl/blog/kategoria/'

import Layout from '@repo/shared/Layout'
import sanityFetch from '@repo/utils/sanity.fetch'
import metadataFetch from '@repo/utils/metadata.fetch'
import Breadcrumbs from '@components/shared/Breadcrumbs.astro'
import PortableText, { PortableTextQuery, type PortableTextValue } from '@repo/ui/portable-text'
import Hero, { Hero_Query, type HeroProps } from '@components/Blog/Hero.astro'
import Listing, { Listing_Query, type ListingProps } from '@components/Blog/Listing.astro'
import Components, { Components_Query, type ComponentsProps } from '@components/Components.astro'

export const categories = await sanityFetch<{ slug: string }[]>({
  query: `
    *[_type == "BlogCategory_Collection" && language == $language][] {
      "slug": slug.current,
    }
  `,
  params: { language: 'pl' },
})

export async function getStaticPaths() {
  return categories?.map(({ slug }) => ({ params: { category: slug.replace(slugPrefix, '') } }))
}

const { category: _category } = Astro.params
const categorySlug = `${slugPrefix}${_category}`

if (!categories.find(({ slug }) => slug === categorySlug)) return Astro.rewrite('/404')

const page = await sanityFetch<{
  name: string
  slug: string
  category: {
    name: string
    slug: string
    heading: PortableTextValue
  }
  hero: HeroProps
  listing: ListingProps
  components: ComponentsProps
}>({
  query: `
  *[_type == "Blog_Page" && language == $language][0] {
    name,
    "slug": slug.current,
    "category": *[_type == "BlogCategory_Collection" && slug.current == $category][0] {
      name,
      "slug": slug.current,
      ${PortableTextQuery('heading')}
    },
    ${Hero_Query}
    ${Listing_Query({ currentPage: 1, currentCategorySlug: categorySlug })}
    ${Components_Query}
  }`,
  params: {
    category: categorySlug,
    language: 'pl',
  },
})

const metadata = await metadataFetch(categorySlug)
---

<Layout {...metadata}>
  <Breadcrumbs
    data={[
      { name: page.name, path: page.slug },
      { name: page.category.name, path: page.category.slug },
    ]}
  />
  <PortableText value={page.category.heading} heading="h1" class="visually-hidden" />
  <Hero {...page.hero} />
  <Listing
    {...page.listing}
    currentPage={1}
    totalItems={page.listing.totalPostsByCategory}
    currentCategorySlug={page.category.slug}
    slugBase={page.category.slug}
  />
  <Components data={page.components} hasPreviousSections={true} />
</Layout>
