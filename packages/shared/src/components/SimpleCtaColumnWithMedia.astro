---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@repo/ui/portable-text'
import Image, { ImageDataQuery, type ImageDataProps } from '@repo/ui/Image'
import Button, { ButtonDataQuery, type ButtonDataProps } from '@repo/ui/Button'
import Video, { VideoDataQuery, type VideoDataProps } from '@repo/ui/Video.astro'

export const SimpleCtaColumnWithMedia_Query = `
  _type == "SimpleCtaColumnWithMedia" => {
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('paragraph')}
    ${ButtonDataQuery('cta')}
    isVideo,
    ${ImageDataQuery('image')}
    ${VideoDataQuery('video')}
  },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  paragraph: PortableTextValue
  cta: ButtonDataProps
  isVideo: boolean
  video: VideoDataProps
  image: ImageDataProps
}

const { index, sectionId, heading, paragraph, cta, isVideo, video, image } = Astro.props
---

<section class="SimpleCtaColumnWithMedia" id={sectionId}>
  <header>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="h2" />
    <PortableText value={paragraph} class="paragraph" />
    <Button {...cta} />
  </header>
  {
    isVideo ? (
      <Video {...video} class="media" />
    ) : (
      <Image {...image} sizes="(max-width: 63rem) 100vw, 50vw" class="media" />
    )
  }
</section>

<style lang="scss">
  .SimpleCtaColumnWithMedia {
    padding: clamp(4rem, calc(5vw / 0.48), 6rem) 0;
    display: grid;
    grid-template-columns: 1fr 1.2fr;
    gap: clamp(2rem, calc(5vw / 0.48), 8rem);
    align-items: center;
    header {
      .paragraph {
        margin: 1rem 0 3rem;
      }
    }
    .media {
      border-radius: 0.25rem;
      border: 1px solid var(--neutral-600, #4a4a57);
    }
    @media (max-width: 63rem) {
      grid-template-columns: 1fr;
      max-width: 38rem;
      margin: 0 auto;
      header {
        order: 1;
      }
    }
  }
</style>
