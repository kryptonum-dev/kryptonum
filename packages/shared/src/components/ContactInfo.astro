---
import Image, { ImageDataQuery, type ImageDataProps } from '@repo/ui/Image'
import Copy from '@repo/ui/Copy.astro'
import { type Language } from '@repo/shared/languages'

type Props = {
  index: number
  sectionId?: string
  img: ImageDataProps
  emailText: string
  email: string
  telText: string
  tel?: string
  address: {
    img: ImageDataProps
    text: string
    addressText: string
    mapLink: string
  }
}

export const ContactInfo_Query = `
  _type == "ContactInfo" => {
    "img": select(isReference => personReference -> ${ImageDataQuery('img')} ${ImageDataQuery('img')}),
    emailText,
    "email": coalesce(email, personReference -> email),
    telText,
    "tel": coalesce(tel, personReference -> tel),
    address {
      ${ImageDataQuery('img')}
      text,
      "addressText": coalesce(addressText, *[_type == "global"][0].address.addressText),
      "mapLink": coalesce(mapLink, *[_type == "global"][0].address.mapLink),
    },
  },
`

const lang = (Astro.params.lang as Language) || 'pl'
const translations = {
  pl: {
    copyEmailSuccess: 'Pomyślnie skopiowano adres e-mail',
    copyTelSuccess: 'Pomyślnie skopiowano numer telefonu',
    checkMap: 'Zobacz na mapie',
  },
  en: {
    copyEmailSuccess: 'Successfully copied email address',
    copyTelSuccess: 'Successfully copied phone number',
    checkMap: 'Check on map',
  },
} as const
const t = translations[lang]

const { sectionId, img, emailText, email, telText, tel, address } = Astro.props
---

<section class="ContactInfo" id={sectionId}>
  <div class="avatar-wrapper">
    <Image {...img} sizes="64px" class="gradient-thumbnail" />
    <div class="person">
      <div class="email">
        <p class="label-text">{emailText}</p>
        <div class="copy-wrapper">
          <a href={`mailto:${email}`}>{email}</a>
          <Copy data={email} successMessage={t.copyEmailSuccess} />
        </div>
      </div>
      {
        tel && (
          <div class="tel">
            <p class="label-text">{telText}</p>
            <div class="copy-wrapper">
              <a href={`tel:${tel}`}>{tel}</a>
              <Copy data={tel} successMessage={t.copyTelSuccess} />
            </div>
          </div>
        )
      }
    </div>
  </div>
  <div class="avatar-wrapper address">
    <Image {...address.img} sizes="64px" class="gradient-thumbnail" />
    <div>
      <p class="label-text">{address.text}</p>
      <div class="copy-wrapper">
        <p>{address.addressText}</p>
        <a href={address.mapLink} target="_blank" rel="noopener noreferrer" class="CopyToClipboard">
          <span>
            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" fill="none">
              <path fill="#1A73E8" d="M7.78.266a5.573 5.573 0 0 0-5.974 1.73l2.637 2.213L7.781.266Z"></path>
              <path
                fill="#EA4335"
                d="M1.806 1.996A5.581 5.581 0 0 0 .5 5.576c0 1.052.206 1.899.556 2.66L4.443 4.21 1.806 1.996Z">
              </path>
              <path
                fill="#4285F4"
                d="M6.088 3.446a2.137 2.137 0 0 1 1.633 3.52S9.4 4.958 11.046 3.01A5.571 5.571 0 0 0 7.781.266L4.443 4.208c.4-.46.98-.762 1.645-.762Z">
              </path>
              <path
                fill="#FBBC04"
                d="M6.088 7.714a2.137 2.137 0 0 1-2.141-2.14c0-.52.181-1.004.496-1.367L1.057 8.234c.58 1.282 1.548 2.322 2.54 3.616L7.72 6.952c-.399.472-.98.762-1.632.762Z">
              </path>
              <path
                fill="#34A853"
                d="M7.647 13.207c1.863-2.915 4.027-4.233 4.027-7.62 0-.93-.23-1.801-.629-2.575l-7.45 8.84c.315.411.642.883.956 1.367 1.137 1.753.822 2.793 1.548 2.793.726 0 .411-1.052 1.548-2.805Z">
              </path>
            </svg>
            {t.checkMap}
          </span>
        </a>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  .ContactInfo {
    padding: clamp(2rem, calc(3vw / 0.48), 4rem) 0;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
    gap: clamp(2rem, calc(2.5vw / 0.48), 2.5rem);
    .person {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: clamp(1rem, calc(1.5vw / 0.48), 1.75rem);
    }
    .copy-wrapper {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: 0.38rem;
    }
    img {
      width: 64px;
      height: 64px;
      border-radius: 50%;
    }
    .label-text {
      font-size: var(--typography-body-m, 0.875rem);
      color: var(--neutral-400, #c6cdcc);
    }
    .avatar-wrapper {
      display: grid;
      grid-template-columns: auto 1fr;
      gap: 1rem;
    }
    .address {
      .label-text {
        margin-top: 0.2rem;
      }
    }
  }
</style>
