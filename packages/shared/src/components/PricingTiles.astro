---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@repo/ui/portable-text'
import Button, { ButtonDataQuery, type ButtonDataProps } from '@repo/ui/Button'
import Image, { ImageDataQuery, type ImageDataProps } from '@repo/ui/Image'

export const PricingTiles_Query = `
  _type == "PricingTiles" => {
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('paragraph')}
    items[] {
      name,
      price,
      oldPrice,
      ${ButtonDataQuery('cta')}
      featuresTitle,
      features[],
      ${ImageDataQuery('thumbnails[]')}
      isHighlighted,
      highlight {
        ${ImageDataQuery('icon')}
        title,
        ${ImageDataQuery('avatars[]')}
        avatarsTruncation
      },
    },
    additionalInfo,
  },
`

type Props = {
  index: number
  sectionId?: string
  heading: PortableTextValue
  paragraph: PortableTextValue
  items: {
    name: string
    price: string
    oldPrice?: string
    cta: ButtonDataProps
    featuresTitle: string
    features: string[]
    thumbnails?: Array<ImageDataProps & { isHighlighted?: boolean }>
    isHighlighted?: boolean
    highlight?: {
      title: string
      icon: ImageDataProps
      avatars?: ImageDataProps[]
      avatarsTruncation?: string
    }
  }[]
  additionalInfo?: string
}

const { index, sectionId, heading, paragraph, items, additionalInfo } = Astro.props

const Subheading = index === 0 ? 'h2' : 'h3'
---

<section class="PricingTiles" id={sectionId}>
  <header class="header">
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} class="heading h2" />
    <PortableText value={paragraph} class="paragraph" />
  </header>
  <div class="tiles">
    {
      items.map(({ name, price, oldPrice, cta, featuresTitle, features, thumbnails, isHighlighted, highlight }) => (
        <article class="tile" data-highlighted={isHighlighted}>
          {thumbnails && thumbnails.length > 0 && (
            <div class="thumbnails">
              {thumbnails.map((thumbnail) => (
                <Image {...thumbnail} sizes="64px" />
              ))}
            </div>
          )}
          {isHighlighted && highlight && (
            <div class="highlight">
              <div class="avatars">
                {highlight.avatars?.map((avatar) => (
                  <Image {...avatar} sizes="32px" class="avatar-image" />
                ))}
                <span>{highlight.avatarsTruncation}</span>
              </div>
              <Image {...highlight.icon} class="highlight-icon" sizes="24px" />
              <p class="highlight-title">{highlight.title}</p>
            </div>
          )}
          <header class="tile-header">
            <Subheading class="name">{name}</Subheading>
            <div class="price-container">
              <p class="price">{price}</p>
              {oldPrice && <del class="old-price">{oldPrice}</del>}
            </div>
          </header>
          <Button {...cta} className="cta" />
          <div class="features-container">
            <p class="features-title">{featuresTitle}</p>
            <ul class="features">
              {features.map((feature) => (
                <li>
                  <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="none" viewBox="0 0 22 22">
                    <path
                      fill="url(#paint0_linear_7679_31184)"
                      fill-rule="evenodd"
                      d="M8.12 3.793c-.193.183-.29.275-.394.353-.24.18-.512.31-.802.382-.127.032-.259.05-.523.085-.664.088-.996.132-1.27.245a2.26 2.26 0 0 0-1.304 1.45c-.084.282-.093.617-.111 1.287-.007.267-.01.4-.03.529a2.26 2.26 0 0 1-.296.837c-.067.112-.148.218-.31.43-.407.532-.61.798-.724 1.07a2.26 2.26 0 0 0 .102 1.948c.141.26.371.503.832.99.183.193.275.29.353.394.18.24.31.512.383.802.032.126.05.258.084.523.088.664.132.996.245 1.27a2.261 2.261 0 0 0 1.45 1.304c.283.083.618.093 1.287.11.267.008.4.012.53.03.295.043.58.144.837.297.112.067.218.148.43.31.531.407.797.61 1.07.724a2.26 2.26 0 0 0 1.947-.102c.26-.141.503-.372.99-.832.193-.183.29-.275.394-.353.24-.18.512-.31.802-.383.127-.032.259-.05.523-.084.664-.089.996-.133 1.27-.245a2.26 2.26 0 0 0 1.304-1.45c.084-.283.093-.618.111-1.287.007-.267.011-.4.03-.53a2.26 2.26 0 0 1 .296-.837c.067-.112.148-.218.31-.43.407-.531.611-.797.724-1.07a2.26 2.26 0 0 0-.102-1.947c-.141-.26-.371-.503-.832-.99-.183-.193-.275-.29-.353-.394a2.26 2.26 0 0 1-.383-.802 4.78 4.78 0 0 1-.084-.523c-.088-.664-.132-.996-.245-1.27a2.26 2.26 0 0 0-1.45-1.304c-.283-.084-.617-.093-1.287-.111-.267-.008-.4-.011-.53-.03a2.261 2.261 0 0 1-.837-.296c-.112-.067-.217-.148-.43-.31-.531-.408-.797-.611-1.07-.724a2.26 2.26 0 0 0-1.947.102c-.26.14-.503.371-.99.832Zm5.934 5.249a.678.678 0 1 0-1.008-.908l-3.824 4.248-1.397-1.258a.678.678 0 1 0-.908 1.008l1.901 1.712c.278.25.707.228.958-.05l4.278-4.752Z"
                      clip-rule="evenodd"
                    />
                    <defs>
                      <linearGradient
                        id="paint0_linear_7679_31184"
                        x1="18.082"
                        x2=".818"
                        y1="2.269"
                        y2="4.28"
                        gradientUnits="userSpaceOnUse">
                        <stop stop-color="#2DD282" />
                        <stop offset="1" stop-color="#90F4E8" />
                      </linearGradient>
                    </defs>
                  </svg>
                  <span>{feature}</span>
                </li>
              ))}
            </ul>
          </div>
        </article>
      ))
    }
  </div>
  {
    additionalInfo && (
      <div class="additional-info">
        <div class="divider" aria-hidden="true" />
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="66"
          height="82"
          fill="none"
          viewBox="0 0 66 82"
          aria-hidden="true">
          <path
            fill="url(#paint0_linear_7676_44167)"
            fill-rule="evenodd"
            d="M32.997 33.664a8.333 8.333 0 1 0 0 16.667 8.333 8.333 0 0 0 0-16.667Zm-.643 5.474-1.68 1.337c-.704.561-1.056.842-.988 1.155l.004.016c.078.311.525.43 1.418.67.496.133.744.2.86.387l.007.01c.112.19.048.43-.08.906l-.033.125c-.354 1.322-.531 1.983-.19 2.196.34.213.884-.219 1.969-1.083l1.68-1.337c.704-.561 1.056-.842.987-1.155l-.004-.016c-.078-.31-.524-.43-1.417-.67-.497-.133-.745-.2-.861-.387l-.006-.01c-.112-.19-.049-.429.08-.906l.033-.124c.354-1.322.53-1.983.19-2.197-.341-.213-.884.219-1.97 1.083Z"
            clip-rule="evenodd"
          />
          <path
            fill="url(#paint1_linear_7676_44167)"
            stroke="url(#paint2_linear_7676_44167)"
            d="m7.678 32.657 12.249-16.572C27.844 5.373 31.803.017 35.497 1.15 39.19 2.28 39.19 8.85 39.19 21.989v1.238c0 4.74 0 7.108 1.514 8.595l.08.077c1.547 1.454 4.013 1.454 8.945 1.454 8.876 0 13.313 0 14.813 2.692l.072.135c1.416 2.733-1.153 6.21-6.292 13.163L46.073 65.915c-7.917 10.712-11.876 16.068-15.57 14.936-3.693-1.132-3.693-7.701-3.693-20.84v-1.238c0-4.739 0-7.108-1.514-8.595l-.08-.076c-1.547-1.455-4.013-1.455-8.945-1.455-8.875 0-13.313 0-14.813-2.692a5.139 5.139 0 0 1-.072-.135c-1.416-2.733 1.153-6.21 6.292-13.163Z"
          />
          <defs>
            <linearGradient
              id="paint0_linear_7676_44167"
              x1="41.018"
              x2="23.673"
              y1="33.664"
              y2="34.769"
              gradientUnits="userSpaceOnUse">
              <stop stop-color="#2DD282" />
              <stop offset="1" stop-color="#90F4E8" />
            </linearGradient>
            <linearGradient
              id="paint1_linear_7676_44167"
              x1="50.753"
              x2="72.712"
              y1="78.151"
              y2="26.107"
              gradientUnits="userSpaceOnUse">
              <stop stop-color="#2DD282" stop-opacity=".3" />
              <stop offset=".5" stop-color="#90F4E8" stop-opacity=".15" />
              <stop offset="1" stop-color="#90F4E8" stop-opacity="0" />
            </linearGradient>
            <linearGradient
              id="paint2_linear_7676_44167"
              x1="50.753"
              x2="72.712"
              y1="78.151"
              y2="26.107"
              gradientUnits="userSpaceOnUse">
              <stop stop-color="#2DD282" stop-opacity=".3" />
              <stop offset=".5" stop-color="#90F4E8" stop-opacity=".15" />
              <stop offset="1" stop-color="#90F4E8" stop-opacity="0" />
            </linearGradient>
          </defs>
        </svg>
        <p>{additionalInfo}</p>
      </div>
    )
  }
</section>

<style lang="scss">
  .PricingTiles {
    padding: clamp(3rem, calc(4vw / 0.48), 5rem) 0;
    .header {
      text-align: center;
      margin-bottom: clamp(6rem, calc(7vw / 0.48), 7.5rem);
      .heading {
        max-width: 32rem;
        margin: 0 auto 1rem;
      }
      .paragraph {
        max-width: 40rem;
        margin: 0 auto;
      }
    }
    .tiles {
      display: grid;
      grid-template-columns: 1fr 1fr;
      align-items: flex-start;
      gap: 6rem 1.25rem;
      max-width: 53rem;
      margin: 0 auto;
      position: relative;
      @media (max-width: 56rem) {
        grid-template-columns: 1fr;
      }
      &::before {
        content: '';
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 150%;
        height: 100%;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' fill='none' viewBox='0 0 30 30'%3E%3Cg clip-path='url(%23clip0_7831_69874)'%3E%3Cpath fill='url(%23paint0_linear_7831_69874)' fill-rule='evenodd' d='m0 28.942 2.123-2.122 1.057 1.058L1.057 30H0v-1.058ZM0 1.05l2.123 2.122L3.18 2.115 1.057 0H0v1.058-.008ZM28.942 30l-2.122-2.122 1.058-1.058L30 28.942V30h-1.058ZM30 1.058 27.878 3.18 26.82 2.122 28.942 0H30v1.058ZM15 13.95l2.122-2.122 1.058 1.057L16.058 15l2.122 2.122-1.058 1.058L15 16.058l-2.123 2.122-1.057-1.058L13.943 15l-2.123-2.123 1.057-1.057L15 13.943v.007Z' clip-rule='evenodd'/%3E%3C/g%3E%3Cdefs%3E%3ClinearGradient id='paint0_linear_7831_69874' x1='29.438' x2='-1.784' y1='0' y2='1.989' gradientUnits='userSpaceOnUse'%3E%3Cstop stop-color='%232DD282'/%3E%3Cstop offset='1' stop-color='%2390F4E8'/%3E%3C/linearGradient%3E%3CclipPath id='clip0_7831_69874'%3E%3Cpath fill='%23fff' d='M0 0h30v30H0z'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E");
        background-position: 5px;
        mask-image: radial-gradient(ellipse 62% 48% at 50% 50%, rgba(0, 0, 0, 0.48), rgba(0, 0, 0, 0) 100%);
        z-index: -1;
        transition: background-position 1800ms var(--easing);
      }
      &:has(.tile .cta:hover) {
        &::before {
          background-position: 20px;
        }
      }
      .tile {
        position: relative;
        padding: clamp(1.25rem, calc(1.25vw / 0.48), 2.75rem);
        border-radius: 0.75rem;
        border: 1.5px solid var(--primary-500, #064040);
        background-color: var(--neutral-900, #000103);
        box-shadow: 0px 1px 4px 0px rgba(25, 33, 61, 0.08);
        &[data-highlighted='true'] {
          background:
            linear-gradient(var(--primary-900), var(--primary-900)) padding-box,
            var(--primary-gradient-400) border-box;
          border-color: rgba(0, 0, 0, 0);
        }
        &[data-highlighted='false'] {
          .features-container {
            .features {
              li {
                svg {
                  path {
                    fill: var(--neutral-400, #c6cdcc);
                  }
                }
              }
            }
          }
        }
        .tile-header {
          display: flex;
          flex-wrap: wrap;
          justify-content: space-between;
          gap: 0.5rem 1rem;
          .name {
            font-size: var(--typography-heading-xl, 1.875rem);
          }
          .price-container {
            line-height: 1.2;
            .old-price {
              color: var(--neutral-500, #75758a);
            }
          }
        }
        .cta {
          margin: clamp(1.5rem, calc(1.75vw / 0.48), 2.25rem) 0;
          width: 100%;
        }
        .features-container {
          &::before {
            content: '';
            display: block;
            width: 100%;
            height: 2px;
            background: radial-gradient(circle at center, var(--primary-500, #064040) 1px, rgba(0, 0, 0, 0) 1px) 0 0 /
              8px 2px repeat-x;
            margin-bottom: clamp(1.5rem, calc(1.75vw / 0.48), 2.25rem);
          }
          .features-title {
            margin-bottom: clamp(1rem, calc(1vw / 0.48), 1.25rem);
          }
          .features {
            display: grid;
            gap: 0.62rem;
            li {
              display: grid;
              grid-template-columns: auto 1fr;
              gap: 0.5rem;
              color: var(--neutral-400, #c6cdcc);
              svg {
                margin-top: 0.22rem;
              }
            }
          }
        }
        &:has(.cta:hover) {
          .thumbnails {
            img {
              &:nth-child(1) {
                transform: rotate(-4deg) translateY(-10px);
              }
              &:nth-child(2) {
                transform: rotate(4deg) translateY(-10px);
              }
            }
          }
        }
        .thumbnails {
          position: absolute;
          left: clamp(1.25rem, calc(1.25vw / 0.48), 2.75rem);
          top: -62px;
          display: flex;
          z-index: -1;
          img {
            width: 64px;
            height: 85px;
            border-radius: 0.5rem;
            border: 2px solid var(--primary-500, #064040);
            transition: transform 500ms var(--easing);
            &:nth-child(1) {
              transform: rotate(-4deg);
            }
            &:nth-child(2) {
              transform: rotate(4deg);
              transition-delay: 80ms;
            }
          }
        }
        .highlight {
          border-radius: 3rem;
          font-size: var(--typography-body-s, 0.75rem);
          border: 1.5px solid rgba(0, 0, 0, 0);
          background:
            linear-gradient(var(--primary-700, #021d1d), var(--primary-700, #021d1d)) padding-box,
            var(--primary-gradient-400) border-box;
          position: absolute;
          top: -0.5rem;
          right: 0;
          transform: translateY(-100%);
          padding: 0.38rem 0.75rem;
          display: grid;
          grid-template-columns: auto 1fr;
          align-items: center;
          gap: 0.5rem;
          &::before {
            content: '';
            display: block;
            width: 5rem;
            height: 5rem;
            position: absolute;
            top: 50%;
            left: 10%;
            transform: translate(-50%, -50%);
            background-color: var(--primary-500, #064040);
            filter: blur(32px);
            z-index: -1;
          }
          .avatars {
            display: flex;
            align-items: center;
            position: absolute;
            left: 0.75rem;
            top: 0.5rem;
            transform: translateY(-100%);
            & > * {
              margin-right: -0.5rem;
            }
            img {
              width: 26px;
              height: 26px;
              border-radius: 50%;
              border: 1px solid var(--primary-700, #021d1d);
            }
            span {
              border-radius: 3rem;
              padding: 0.125rem 0.375rem;
              border: 1.5px solid rgba(0, 0, 0, 0);
              background:
                linear-gradient(var(--primary-700, #021d1d), var(--primary-700, #021d1d)) padding-box,
                linear-gradient(
                    266deg,
                    rgba(5, 67, 45, 0.4),
                    rgba(5, 80, 53, 0.4) 34.51%,
                    #1f6644 67.25%,
                    rgba(17, 53, 49, 0.2)
                  )
                  border-box;
            }
          }
        }
      }
    }
    .additional-info {
      position: relative;
      margin: clamp(5rem, calc(6vw / 0.48), 7rem) calc(var(--page-margin) * -1) 0;
      .divider {
        width: 100%;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        &::before,
        &::after {
          content: '';
          height: 1px;
          background-color: var(--primary-500, #064040);
          width: 100%;
          height: 1px;
        }
      }
      svg {
        position: absolute;
        left: 50%;
        top: 0;
        transform: translate(-50%, -50%);
      }
      p {
        max-width: 15rem;
        margin: 1.5rem auto 0;
        text-align: center;
        font-size: var(--typography-body-xl, 1rem);
        color: var(--neutral-400, #c6cdcc);
      }
    }
  }
</style>
